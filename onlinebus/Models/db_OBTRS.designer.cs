#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace onlinebus.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="OBTRS_DB")]
	public partial class db_OBTRSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_CompanyInfo(tbl_CompanyInfo instance);
    partial void Updatetbl_CompanyInfo(tbl_CompanyInfo instance);
    partial void Deletetbl_CompanyInfo(tbl_CompanyInfo instance);
    partial void Inserttbl_Role(tbl_Role instance);
    partial void Updatetbl_Role(tbl_Role instance);
    partial void Deletetbl_Role(tbl_Role instance);
    partial void Inserttbl_Administrator(tbl_Administrator instance);
    partial void Updatetbl_Administrator(tbl_Administrator instance);
    partial void Deletetbl_Administrator(tbl_Administrator instance);
    partial void Inserttbl_Service(tbl_Service instance);
    partial void Updatetbl_Service(tbl_Service instance);
    partial void Deletetbl_Service(tbl_Service instance);
    partial void Inserttbl_New(tbl_New instance);
    partial void Updatetbl_New(tbl_New instance);
    partial void Deletetbl_New(tbl_New instance);
    partial void Inserttbl_AccountCustomer(tbl_AccountCustomer instance);
    partial void Updatetbl_AccountCustomer(tbl_AccountCustomer instance);
    partial void Deletetbl_AccountCustomer(tbl_AccountCustomer instance);
    #endregion
		
		public db_OBTRSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["OBTRS_DBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public db_OBTRSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_OBTRSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_OBTRSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_OBTRSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_CompanyInfo> tbl_CompanyInfos
		{
			get
			{
				return this.GetTable<tbl_CompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Role> tbl_Roles
		{
			get
			{
				return this.GetTable<tbl_Role>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Administrator> tbl_Administrators
		{
			get
			{
				return this.GetTable<tbl_Administrator>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Service> tbl_Services
		{
			get
			{
				return this.GetTable<tbl_Service>();
			}
		}
		
		public System.Data.Linq.Table<tbl_New> tbl_News
		{
			get
			{
				return this.GetTable<tbl_New>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AccountCustomer> tbl_AccountCustomers
		{
			get
			{
				return this.GetTable<tbl_AccountCustomer>();
			}
		}
		
		[Function(Name="dbo.sp_SearchNews")]
		public ISingleResult<sp_SearchNewsResult> sp_SearchNews([Parameter(DbType="NText")] string title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title);
			return ((ISingleResult<sp_SearchNewsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_SearchService")]
		public ISingleResult<sp_SearchServiceResult> sp_SearchService([Parameter(DbType="NText")] string title)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title);
			return ((ISingleResult<sp_SearchServiceResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_GetAdmin")]
		public ISingleResult<sp_GetAdminResult> sp_GetAdmin()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetAdminResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.tbl_CompanyInfo")]
	public partial class tbl_CompanyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _AboutUs;
		
		private string _ContactUs;
		
		private string _TermAndCondition;
		
		private string _PrivacyPolicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OnAboutUsChanging(string value);
    partial void OnAboutUsChanged();
    partial void OnContactUsChanging(string value);
    partial void OnContactUsChanged();
    partial void OnTermAndConditionChanging(string value);
    partial void OnTermAndConditionChanged();
    partial void OnPrivacyPolicyChanging(string value);
    partial void OnPrivacyPolicyChanged();
    #endregion
		
		public tbl_CompanyInfo()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_AboutUs", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AboutUs
		{
			get
			{
				return this._AboutUs;
			}
			set
			{
				if ((this._AboutUs != value))
				{
					this.OnAboutUsChanging(value);
					this.SendPropertyChanging();
					this._AboutUs = value;
					this.SendPropertyChanged("AboutUs");
					this.OnAboutUsChanged();
				}
			}
		}
		
		[Column(Storage="_ContactUs", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ContactUs
		{
			get
			{
				return this._ContactUs;
			}
			set
			{
				if ((this._ContactUs != value))
				{
					this.OnContactUsChanging(value);
					this.SendPropertyChanging();
					this._ContactUs = value;
					this.SendPropertyChanged("ContactUs");
					this.OnContactUsChanged();
				}
			}
		}
		
		[Column(Storage="_TermAndCondition", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TermAndCondition
		{
			get
			{
				return this._TermAndCondition;
			}
			set
			{
				if ((this._TermAndCondition != value))
				{
					this.OnTermAndConditionChanging(value);
					this.SendPropertyChanging();
					this._TermAndCondition = value;
					this.SendPropertyChanged("TermAndCondition");
					this.OnTermAndConditionChanged();
				}
			}
		}
		
		[Column(Storage="_PrivacyPolicy", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PrivacyPolicy
		{
			get
			{
				return this._PrivacyPolicy;
			}
			set
			{
				if ((this._PrivacyPolicy != value))
				{
					this.OnPrivacyPolicyChanging(value);
					this.SendPropertyChanging();
					this._PrivacyPolicy = value;
					this.SendPropertyChanged("PrivacyPolicy");
					this.OnPrivacyPolicyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Roles")]
	public partial class tbl_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Role_ID;
		
		private string _Role_Name;
		
		private string _Role_Alias;
		
		private EntitySet<tbl_Administrator> _tbl_Administrators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IDChanging(System.Guid value);
    partial void OnRole_IDChanged();
    partial void OnRole_NameChanging(string value);
    partial void OnRole_NameChanged();
    partial void OnRole_AliasChanging(string value);
    partial void OnRole_AliasChanged();
    #endregion
		
		public tbl_Role()
		{
			this._tbl_Administrators = new EntitySet<tbl_Administrator>(new Action<tbl_Administrator>(this.attach_tbl_Administrators), new Action<tbl_Administrator>(this.detach_tbl_Administrators));
			OnCreated();
		}
		
		[Column(Storage="_Role_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Role_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Role_Name
		{
			get
			{
				return this._Role_Name;
			}
			set
			{
				if ((this._Role_Name != value))
				{
					this.OnRole_NameChanging(value);
					this.SendPropertyChanging();
					this._Role_Name = value;
					this.SendPropertyChanged("Role_Name");
					this.OnRole_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Role_Alias", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string Role_Alias
		{
			get
			{
				return this._Role_Alias;
			}
			set
			{
				if ((this._Role_Alias != value))
				{
					this.OnRole_AliasChanging(value);
					this.SendPropertyChanging();
					this._Role_Alias = value;
					this.SendPropertyChanged("Role_Alias");
					this.OnRole_AliasChanged();
				}
			}
		}
		
		[Association(Name="tbl_Role_tbl_Administrator", Storage="_tbl_Administrators", ThisKey="Role_ID", OtherKey="Admin_RoleID")]
		public EntitySet<tbl_Administrator> tbl_Administrators
		{
			get
			{
				return this._tbl_Administrators;
			}
			set
			{
				this._tbl_Administrators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Administrators(tbl_Administrator entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Role = this;
		}
		
		private void detach_tbl_Administrators(tbl_Administrator entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Role = null;
		}
	}
	
	[Table(Name="dbo.tbl_Administrator")]
	public partial class tbl_Administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Admin_ID;
		
		private System.Nullable<System.Guid> _Admin_RoleID;
		
		private string _Admin_Name;
		
		private System.DateTime _Admin_Birthday;
		
		private string _Admin_Password;
		
		private string _Admin_PasswordQuestion;
		
		private System.DateTime _Admin_CreateDate;
		
		private string _Admin_Address;
		
		private string _Admin_Phone;
		
		private string _Admin_Email;
		
		private string _Admin_Comment;
		
		private System.Nullable<System.DateTime> _Admin_LastLoginDate;
		
		private bool _Admin_Active;
		
		private EntityRef<tbl_Role> _tbl_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmin_IDChanging(System.Guid value);
    partial void OnAdmin_IDChanged();
    partial void OnAdmin_RoleIDChanging(System.Nullable<System.Guid> value);
    partial void OnAdmin_RoleIDChanged();
    partial void OnAdmin_NameChanging(string value);
    partial void OnAdmin_NameChanged();
    partial void OnAdmin_BirthdayChanging(System.DateTime value);
    partial void OnAdmin_BirthdayChanged();
    partial void OnAdmin_PasswordChanging(string value);
    partial void OnAdmin_PasswordChanged();
    partial void OnAdmin_PasswordQuestionChanging(string value);
    partial void OnAdmin_PasswordQuestionChanged();
    partial void OnAdmin_CreateDateChanging(System.DateTime value);
    partial void OnAdmin_CreateDateChanged();
    partial void OnAdmin_AddressChanging(string value);
    partial void OnAdmin_AddressChanged();
    partial void OnAdmin_PhoneChanging(string value);
    partial void OnAdmin_PhoneChanged();
    partial void OnAdmin_EmailChanging(string value);
    partial void OnAdmin_EmailChanged();
    partial void OnAdmin_CommentChanging(string value);
    partial void OnAdmin_CommentChanged();
    partial void OnAdmin_LastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmin_LastLoginDateChanged();
    partial void OnAdmin_ActiveChanging(bool value);
    partial void OnAdmin_ActiveChanged();
    #endregion
		
		public tbl_Administrator()
		{
			this._tbl_Role = default(EntityRef<tbl_Role>);
			OnCreated();
		}
		
		[Column(Storage="_Admin_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Admin_ID
		{
			get
			{
				return this._Admin_ID;
			}
			set
			{
				if ((this._Admin_ID != value))
				{
					this.OnAdmin_IDChanging(value);
					this.SendPropertyChanging();
					this._Admin_ID = value;
					this.SendPropertyChanged("Admin_ID");
					this.OnAdmin_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_RoleID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Admin_RoleID
		{
			get
			{
				return this._Admin_RoleID;
			}
			set
			{
				if ((this._Admin_RoleID != value))
				{
					if (this._tbl_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmin_RoleIDChanging(value);
					this.SendPropertyChanging();
					this._Admin_RoleID = value;
					this.SendPropertyChanged("Admin_RoleID");
					this.OnAdmin_RoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Admin_Name
		{
			get
			{
				return this._Admin_Name;
			}
			set
			{
				if ((this._Admin_Name != value))
				{
					this.OnAdmin_NameChanging(value);
					this.SendPropertyChanging();
					this._Admin_Name = value;
					this.SendPropertyChanged("Admin_Name");
					this.OnAdmin_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Birthday", DbType="DateTime NOT NULL")]
		public System.DateTime Admin_Birthday
		{
			get
			{
				return this._Admin_Birthday;
			}
			set
			{
				if ((this._Admin_Birthday != value))
				{
					this.OnAdmin_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._Admin_Birthday = value;
					this.SendPropertyChanged("Admin_Birthday");
					this.OnAdmin_BirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Admin_Password
		{
			get
			{
				return this._Admin_Password;
			}
			set
			{
				if ((this._Admin_Password != value))
				{
					this.OnAdmin_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Admin_Password = value;
					this.SendPropertyChanged("Admin_Password");
					this.OnAdmin_PasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_PasswordQuestion", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Admin_PasswordQuestion
		{
			get
			{
				return this._Admin_PasswordQuestion;
			}
			set
			{
				if ((this._Admin_PasswordQuestion != value))
				{
					this.OnAdmin_PasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._Admin_PasswordQuestion = value;
					this.SendPropertyChanged("Admin_PasswordQuestion");
					this.OnAdmin_PasswordQuestionChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime Admin_CreateDate
		{
			get
			{
				return this._Admin_CreateDate;
			}
			set
			{
				if ((this._Admin_CreateDate != value))
				{
					this.OnAdmin_CreateDateChanging(value);
					this.SendPropertyChanging();
					this._Admin_CreateDate = value;
					this.SendPropertyChanged("Admin_CreateDate");
					this.OnAdmin_CreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Admin_Address
		{
			get
			{
				return this._Admin_Address;
			}
			set
			{
				if ((this._Admin_Address != value))
				{
					this.OnAdmin_AddressChanging(value);
					this.SendPropertyChanging();
					this._Admin_Address = value;
					this.SendPropertyChanged("Admin_Address");
					this.OnAdmin_AddressChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Phone", DbType="VarChar(50)")]
		public string Admin_Phone
		{
			get
			{
				return this._Admin_Phone;
			}
			set
			{
				if ((this._Admin_Phone != value))
				{
					this.OnAdmin_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Admin_Phone = value;
					this.SendPropertyChanged("Admin_Phone");
					this.OnAdmin_PhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Email", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Admin_Email
		{
			get
			{
				return this._Admin_Email;
			}
			set
			{
				if ((this._Admin_Email != value))
				{
					this.OnAdmin_EmailChanging(value);
					this.SendPropertyChanging();
					this._Admin_Email = value;
					this.SendPropertyChanged("Admin_Email");
					this.OnAdmin_EmailChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Admin_Comment
		{
			get
			{
				return this._Admin_Comment;
			}
			set
			{
				if ((this._Admin_Comment != value))
				{
					this.OnAdmin_CommentChanging(value);
					this.SendPropertyChanging();
					this._Admin_Comment = value;
					this.SendPropertyChanged("Admin_Comment");
					this.OnAdmin_CommentChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Admin_LastLoginDate
		{
			get
			{
				return this._Admin_LastLoginDate;
			}
			set
			{
				if ((this._Admin_LastLoginDate != value))
				{
					this.OnAdmin_LastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._Admin_LastLoginDate = value;
					this.SendPropertyChanged("Admin_LastLoginDate");
					this.OnAdmin_LastLoginDateChanged();
				}
			}
		}
		
		[Column(Storage="_Admin_Active", DbType="Bit NOT NULL")]
		public bool Admin_Active
		{
			get
			{
				return this._Admin_Active;
			}
			set
			{
				if ((this._Admin_Active != value))
				{
					this.OnAdmin_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Admin_Active = value;
					this.SendPropertyChanged("Admin_Active");
					this.OnAdmin_ActiveChanged();
				}
			}
		}
		
		[Association(Name="tbl_Role_tbl_Administrator", Storage="_tbl_Role", ThisKey="Admin_RoleID", OtherKey="Role_ID", IsForeignKey=true)]
		public tbl_Role tbl_Role
		{
			get
			{
				return this._tbl_Role.Entity;
			}
			set
			{
				tbl_Role previousValue = this._tbl_Role.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Role.Entity = null;
						previousValue.tbl_Administrators.Remove(this);
					}
					this._tbl_Role.Entity = value;
					if ((value != null))
					{
						value.tbl_Administrators.Add(this);
						this._Admin_RoleID = value.Role_ID;
					}
					else
					{
						this._Admin_RoleID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("tbl_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_Services")]
	public partial class tbl_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Services_ID;
		
		private string _Services_Title;
		
		private System.DateTime _Services_Release;
		
		private System.Nullable<System.DateTime> _Services_Edit;
		
		private string _Services_Content;
		
		private string _Services_Image;
		
		private int _Services_ReadCount;
		
		private bool _Services_Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServices_IDChanging(System.Guid value);
    partial void OnServices_IDChanged();
    partial void OnServices_TitleChanging(string value);
    partial void OnServices_TitleChanged();
    partial void OnServices_ReleaseChanging(System.DateTime value);
    partial void OnServices_ReleaseChanged();
    partial void OnServices_EditChanging(System.Nullable<System.DateTime> value);
    partial void OnServices_EditChanged();
    partial void OnServices_ContentChanging(string value);
    partial void OnServices_ContentChanged();
    partial void OnServices_ImageChanging(string value);
    partial void OnServices_ImageChanged();
    partial void OnServices_ReadCountChanging(int value);
    partial void OnServices_ReadCountChanged();
    partial void OnServices_ActiveChanging(bool value);
    partial void OnServices_ActiveChanged();
    #endregion
		
		public tbl_Service()
		{
			OnCreated();
		}
		
		[Column(Storage="_Services_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Services_ID
		{
			get
			{
				return this._Services_ID;
			}
			set
			{
				if ((this._Services_ID != value))
				{
					this.OnServices_IDChanging(value);
					this.SendPropertyChanging();
					this._Services_ID = value;
					this.SendPropertyChanged("Services_ID");
					this.OnServices_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Services_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Services_Title
		{
			get
			{
				return this._Services_Title;
			}
			set
			{
				if ((this._Services_Title != value))
				{
					this.OnServices_TitleChanging(value);
					this.SendPropertyChanging();
					this._Services_Title = value;
					this.SendPropertyChanged("Services_Title");
					this.OnServices_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_Services_Release", DbType="DateTime NOT NULL")]
		public System.DateTime Services_Release
		{
			get
			{
				return this._Services_Release;
			}
			set
			{
				if ((this._Services_Release != value))
				{
					this.OnServices_ReleaseChanging(value);
					this.SendPropertyChanging();
					this._Services_Release = value;
					this.SendPropertyChanged("Services_Release");
					this.OnServices_ReleaseChanged();
				}
			}
		}
		
		[Column(Storage="_Services_Edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> Services_Edit
		{
			get
			{
				return this._Services_Edit;
			}
			set
			{
				if ((this._Services_Edit != value))
				{
					this.OnServices_EditChanging(value);
					this.SendPropertyChanging();
					this._Services_Edit = value;
					this.SendPropertyChanged("Services_Edit");
					this.OnServices_EditChanged();
				}
			}
		}
		
		[Column(Storage="_Services_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Services_Content
		{
			get
			{
				return this._Services_Content;
			}
			set
			{
				if ((this._Services_Content != value))
				{
					this.OnServices_ContentChanging(value);
					this.SendPropertyChanging();
					this._Services_Content = value;
					this.SendPropertyChanged("Services_Content");
					this.OnServices_ContentChanged();
				}
			}
		}
		
		[Column(Storage="_Services_Image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Services_Image
		{
			get
			{
				return this._Services_Image;
			}
			set
			{
				if ((this._Services_Image != value))
				{
					this.OnServices_ImageChanging(value);
					this.SendPropertyChanging();
					this._Services_Image = value;
					this.SendPropertyChanged("Services_Image");
					this.OnServices_ImageChanged();
				}
			}
		}
		
		[Column(Storage="_Services_ReadCount", DbType="Int NOT NULL")]
		public int Services_ReadCount
		{
			get
			{
				return this._Services_ReadCount;
			}
			set
			{
				if ((this._Services_ReadCount != value))
				{
					this.OnServices_ReadCountChanging(value);
					this.SendPropertyChanging();
					this._Services_ReadCount = value;
					this.SendPropertyChanged("Services_ReadCount");
					this.OnServices_ReadCountChanged();
				}
			}
		}
		
		[Column(Storage="_Services_Active", DbType="Bit NOT NULL")]
		public bool Services_Active
		{
			get
			{
				return this._Services_Active;
			}
			set
			{
				if ((this._Services_Active != value))
				{
					this.OnServices_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Services_Active = value;
					this.SendPropertyChanged("Services_Active");
					this.OnServices_ActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_News")]
	public partial class tbl_New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _News_ID;
		
		private string _News_Title;
		
		private System.DateTime _News_Release;
		
		private System.Nullable<System.DateTime> _News_Edit;
		
		private string _News_Content;
		
		private string _News_Image;
		
		private int _News_ReadCount;
		
		private bool _News_Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNews_IDChanging(System.Guid value);
    partial void OnNews_IDChanged();
    partial void OnNews_TitleChanging(string value);
    partial void OnNews_TitleChanged();
    partial void OnNews_ReleaseChanging(System.DateTime value);
    partial void OnNews_ReleaseChanged();
    partial void OnNews_EditChanging(System.Nullable<System.DateTime> value);
    partial void OnNews_EditChanged();
    partial void OnNews_ContentChanging(string value);
    partial void OnNews_ContentChanged();
    partial void OnNews_ImageChanging(string value);
    partial void OnNews_ImageChanged();
    partial void OnNews_ReadCountChanging(int value);
    partial void OnNews_ReadCountChanged();
    partial void OnNews_ActiveChanging(bool value);
    partial void OnNews_ActiveChanged();
    #endregion
		
		public tbl_New()
		{
			OnCreated();
		}
		
		[Column(Storage="_News_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid News_ID
		{
			get
			{
				return this._News_ID;
			}
			set
			{
				if ((this._News_ID != value))
				{
					this.OnNews_IDChanging(value);
					this.SendPropertyChanging();
					this._News_ID = value;
					this.SendPropertyChanged("News_ID");
					this.OnNews_IDChanged();
				}
			}
		}
		
		[Column(Storage="_News_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string News_Title
		{
			get
			{
				return this._News_Title;
			}
			set
			{
				if ((this._News_Title != value))
				{
					this.OnNews_TitleChanging(value);
					this.SendPropertyChanging();
					this._News_Title = value;
					this.SendPropertyChanged("News_Title");
					this.OnNews_TitleChanged();
				}
			}
		}
		
		[Column(Storage="_News_Release", DbType="DateTime NOT NULL")]
		public System.DateTime News_Release
		{
			get
			{
				return this._News_Release;
			}
			set
			{
				if ((this._News_Release != value))
				{
					this.OnNews_ReleaseChanging(value);
					this.SendPropertyChanging();
					this._News_Release = value;
					this.SendPropertyChanged("News_Release");
					this.OnNews_ReleaseChanged();
				}
			}
		}
		
		[Column(Storage="_News_Edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> News_Edit
		{
			get
			{
				return this._News_Edit;
			}
			set
			{
				if ((this._News_Edit != value))
				{
					this.OnNews_EditChanging(value);
					this.SendPropertyChanging();
					this._News_Edit = value;
					this.SendPropertyChanged("News_Edit");
					this.OnNews_EditChanged();
				}
			}
		}
		
		[Column(Storage="_News_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string News_Content
		{
			get
			{
				return this._News_Content;
			}
			set
			{
				if ((this._News_Content != value))
				{
					this.OnNews_ContentChanging(value);
					this.SendPropertyChanging();
					this._News_Content = value;
					this.SendPropertyChanged("News_Content");
					this.OnNews_ContentChanged();
				}
			}
		}
		
		[Column(Storage="_News_Image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string News_Image
		{
			get
			{
				return this._News_Image;
			}
			set
			{
				if ((this._News_Image != value))
				{
					this.OnNews_ImageChanging(value);
					this.SendPropertyChanging();
					this._News_Image = value;
					this.SendPropertyChanged("News_Image");
					this.OnNews_ImageChanged();
				}
			}
		}
		
		[Column(Storage="_News_ReadCount", DbType="Int NOT NULL")]
		public int News_ReadCount
		{
			get
			{
				return this._News_ReadCount;
			}
			set
			{
				if ((this._News_ReadCount != value))
				{
					this.OnNews_ReadCountChanging(value);
					this.SendPropertyChanging();
					this._News_ReadCount = value;
					this.SendPropertyChanged("News_ReadCount");
					this.OnNews_ReadCountChanged();
				}
			}
		}
		
		[Column(Storage="_News_Active", DbType="Bit NOT NULL")]
		public bool News_Active
		{
			get
			{
				return this._News_Active;
			}
			set
			{
				if ((this._News_Active != value))
				{
					this.OnNews_ActiveChanging(value);
					this.SendPropertyChanging();
					this._News_Active = value;
					this.SendPropertyChanged("News_Active");
					this.OnNews_ActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tbl_AccountCustomer")]
	public partial class tbl_AccountCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountCustomerID;
		
		private string _AccountCustomer_Email;
		
		private string _AccountCustomer_Password;
		
		private string _AccountCustomer_IDNumber;
		
		private string _AccountCustomer_FullName;
		
		private System.Nullable<System.DateTime> _AccountCustomer_Birthday;
		
		private bool _AccountCustomer_Gender;
		
		private string _AccountCustomer_Address;
		
		private string _AccountCustomer_PhoneNumber;
		
		private string _AccountCustomer_Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountCustomerIDChanging(int value);
    partial void OnAccountCustomerIDChanged();
    partial void OnAccountCustomer_EmailChanging(string value);
    partial void OnAccountCustomer_EmailChanged();
    partial void OnAccountCustomer_PasswordChanging(string value);
    partial void OnAccountCustomer_PasswordChanged();
    partial void OnAccountCustomer_IDNumberChanging(string value);
    partial void OnAccountCustomer_IDNumberChanged();
    partial void OnAccountCustomer_FullNameChanging(string value);
    partial void OnAccountCustomer_FullNameChanged();
    partial void OnAccountCustomer_BirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnAccountCustomer_BirthdayChanged();
    partial void OnAccountCustomer_GenderChanging(bool value);
    partial void OnAccountCustomer_GenderChanged();
    partial void OnAccountCustomer_AddressChanging(string value);
    partial void OnAccountCustomer_AddressChanged();
    partial void OnAccountCustomer_PhoneNumberChanging(string value);
    partial void OnAccountCustomer_PhoneNumberChanged();
    partial void OnAccountCustomer_JobChanging(string value);
    partial void OnAccountCustomer_JobChanged();
    #endregion
		
		public tbl_AccountCustomer()
		{
			OnCreated();
		}
		
		[Column(Storage="_AccountCustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountCustomerID
		{
			get
			{
				return this._AccountCustomerID;
			}
			set
			{
				if ((this._AccountCustomerID != value))
				{
					this.OnAccountCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomerID = value;
					this.SendPropertyChanged("AccountCustomerID");
					this.OnAccountCustomerIDChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountCustomer_Email
		{
			get
			{
				return this._AccountCustomer_Email;
			}
			set
			{
				if ((this._AccountCustomer_Email != value))
				{
					this.OnAccountCustomer_EmailChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_Email = value;
					this.SendPropertyChanged("AccountCustomer_Email");
					this.OnAccountCustomer_EmailChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_Password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AccountCustomer_Password
		{
			get
			{
				return this._AccountCustomer_Password;
			}
			set
			{
				if ((this._AccountCustomer_Password != value))
				{
					this.OnAccountCustomer_PasswordChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_Password = value;
					this.SendPropertyChanged("AccountCustomer_Password");
					this.OnAccountCustomer_PasswordChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_IDNumber", DbType="VarChar(12)")]
		public string AccountCustomer_IDNumber
		{
			get
			{
				return this._AccountCustomer_IDNumber;
			}
			set
			{
				if ((this._AccountCustomer_IDNumber != value))
				{
					this.OnAccountCustomer_IDNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_IDNumber = value;
					this.SendPropertyChanged("AccountCustomer_IDNumber");
					this.OnAccountCustomer_IDNumberChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountCustomer_FullName
		{
			get
			{
				return this._AccountCustomer_FullName;
			}
			set
			{
				if ((this._AccountCustomer_FullName != value))
				{
					this.OnAccountCustomer_FullNameChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_FullName = value;
					this.SendPropertyChanged("AccountCustomer_FullName");
					this.OnAccountCustomer_FullNameChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> AccountCustomer_Birthday
		{
			get
			{
				return this._AccountCustomer_Birthday;
			}
			set
			{
				if ((this._AccountCustomer_Birthday != value))
				{
					this.OnAccountCustomer_BirthdayChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_Birthday = value;
					this.SendPropertyChanged("AccountCustomer_Birthday");
					this.OnAccountCustomer_BirthdayChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_Gender", DbType="Bit NOT NULL")]
		public bool AccountCustomer_Gender
		{
			get
			{
				return this._AccountCustomer_Gender;
			}
			set
			{
				if ((this._AccountCustomer_Gender != value))
				{
					this.OnAccountCustomer_GenderChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_Gender = value;
					this.SendPropertyChanged("AccountCustomer_Gender");
					this.OnAccountCustomer_GenderChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_Address", DbType="NVarChar(150)")]
		public string AccountCustomer_Address
		{
			get
			{
				return this._AccountCustomer_Address;
			}
			set
			{
				if ((this._AccountCustomer_Address != value))
				{
					this.OnAccountCustomer_AddressChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_Address = value;
					this.SendPropertyChanged("AccountCustomer_Address");
					this.OnAccountCustomer_AddressChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_PhoneNumber", DbType="NVarChar(100)")]
		public string AccountCustomer_PhoneNumber
		{
			get
			{
				return this._AccountCustomer_PhoneNumber;
			}
			set
			{
				if ((this._AccountCustomer_PhoneNumber != value))
				{
					this.OnAccountCustomer_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_PhoneNumber = value;
					this.SendPropertyChanged("AccountCustomer_PhoneNumber");
					this.OnAccountCustomer_PhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_AccountCustomer_Job", DbType="NVarChar(100)")]
		public string AccountCustomer_Job
		{
			get
			{
				return this._AccountCustomer_Job;
			}
			set
			{
				if ((this._AccountCustomer_Job != value))
				{
					this.OnAccountCustomer_JobChanging(value);
					this.SendPropertyChanging();
					this._AccountCustomer_Job = value;
					this.SendPropertyChanged("AccountCustomer_Job");
					this.OnAccountCustomer_JobChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_SearchNewsResult
	{
		
		private System.Guid _News_ID;
		
		private string _News_Title;
		
		private System.DateTime _News_Release;
		
		private System.Nullable<System.DateTime> _News_Edit;
		
		private string _News_Content;
		
		private string _News_Image;
		
		private int _News_ReadCount;
		
		private bool _News_Active;
		
		public sp_SearchNewsResult()
		{
		}
		
		[Column(Storage="_News_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid News_ID
		{
			get
			{
				return this._News_ID;
			}
			set
			{
				if ((this._News_ID != value))
				{
					this._News_ID = value;
				}
			}
		}
		
		[Column(Storage="_News_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string News_Title
		{
			get
			{
				return this._News_Title;
			}
			set
			{
				if ((this._News_Title != value))
				{
					this._News_Title = value;
				}
			}
		}
		
		[Column(Storage="_News_Release", DbType="DateTime NOT NULL")]
		public System.DateTime News_Release
		{
			get
			{
				return this._News_Release;
			}
			set
			{
				if ((this._News_Release != value))
				{
					this._News_Release = value;
				}
			}
		}
		
		[Column(Storage="_News_Edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> News_Edit
		{
			get
			{
				return this._News_Edit;
			}
			set
			{
				if ((this._News_Edit != value))
				{
					this._News_Edit = value;
				}
			}
		}
		
		[Column(Storage="_News_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string News_Content
		{
			get
			{
				return this._News_Content;
			}
			set
			{
				if ((this._News_Content != value))
				{
					this._News_Content = value;
				}
			}
		}
		
		[Column(Storage="_News_Image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string News_Image
		{
			get
			{
				return this._News_Image;
			}
			set
			{
				if ((this._News_Image != value))
				{
					this._News_Image = value;
				}
			}
		}
		
		[Column(Storage="_News_ReadCount", DbType="Int NOT NULL")]
		public int News_ReadCount
		{
			get
			{
				return this._News_ReadCount;
			}
			set
			{
				if ((this._News_ReadCount != value))
				{
					this._News_ReadCount = value;
				}
			}
		}
		
		[Column(Storage="_News_Active", DbType="Bit NOT NULL")]
		public bool News_Active
		{
			get
			{
				return this._News_Active;
			}
			set
			{
				if ((this._News_Active != value))
				{
					this._News_Active = value;
				}
			}
		}
	}
	
	public partial class sp_SearchServiceResult
	{
		
		private System.Guid _Services_ID;
		
		private string _Services_Title;
		
		private System.DateTime _Services_Release;
		
		private System.Nullable<System.DateTime> _Services_Edit;
		
		private string _Services_Content;
		
		private string _Services_Image;
		
		private int _Services_ReadCount;
		
		private bool _Services_Active;
		
		public sp_SearchServiceResult()
		{
		}
		
		[Column(Storage="_Services_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Services_ID
		{
			get
			{
				return this._Services_ID;
			}
			set
			{
				if ((this._Services_ID != value))
				{
					this._Services_ID = value;
				}
			}
		}
		
		[Column(Storage="_Services_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Services_Title
		{
			get
			{
				return this._Services_Title;
			}
			set
			{
				if ((this._Services_Title != value))
				{
					this._Services_Title = value;
				}
			}
		}
		
		[Column(Storage="_Services_Release", DbType="DateTime NOT NULL")]
		public System.DateTime Services_Release
		{
			get
			{
				return this._Services_Release;
			}
			set
			{
				if ((this._Services_Release != value))
				{
					this._Services_Release = value;
				}
			}
		}
		
		[Column(Storage="_Services_Edit", DbType="DateTime")]
		public System.Nullable<System.DateTime> Services_Edit
		{
			get
			{
				return this._Services_Edit;
			}
			set
			{
				if ((this._Services_Edit != value))
				{
					this._Services_Edit = value;
				}
			}
		}
		
		[Column(Storage="_Services_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Services_Content
		{
			get
			{
				return this._Services_Content;
			}
			set
			{
				if ((this._Services_Content != value))
				{
					this._Services_Content = value;
				}
			}
		}
		
		[Column(Storage="_Services_Image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Services_Image
		{
			get
			{
				return this._Services_Image;
			}
			set
			{
				if ((this._Services_Image != value))
				{
					this._Services_Image = value;
				}
			}
		}
		
		[Column(Storage="_Services_ReadCount", DbType="Int NOT NULL")]
		public int Services_ReadCount
		{
			get
			{
				return this._Services_ReadCount;
			}
			set
			{
				if ((this._Services_ReadCount != value))
				{
					this._Services_ReadCount = value;
				}
			}
		}
		
		[Column(Storage="_Services_Active", DbType="Bit NOT NULL")]
		public bool Services_Active
		{
			get
			{
				return this._Services_Active;
			}
			set
			{
				if ((this._Services_Active != value))
				{
					this._Services_Active = value;
				}
			}
		}
	}
	
	public partial class sp_GetAdminResult
	{
		
		private System.Guid _Admin_ID;
		
		private string _Admin_Name;
		
		private System.DateTime _Admin_Birthday;
		
		private string _Role_Name;
		
		private string _Admin_Address;
		
		private string _Admin_Email;
		
		private bool _Admin_Active;
		
		public sp_GetAdminResult()
		{
		}
		
		[Column(Storage="_Admin_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Admin_ID
		{
			get
			{
				return this._Admin_ID;
			}
			set
			{
				if ((this._Admin_ID != value))
				{
					this._Admin_ID = value;
				}
			}
		}
		
		[Column(Storage="_Admin_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Admin_Name
		{
			get
			{
				return this._Admin_Name;
			}
			set
			{
				if ((this._Admin_Name != value))
				{
					this._Admin_Name = value;
				}
			}
		}
		
		[Column(Storage="_Admin_Birthday", DbType="DateTime NOT NULL")]
		public System.DateTime Admin_Birthday
		{
			get
			{
				return this._Admin_Birthday;
			}
			set
			{
				if ((this._Admin_Birthday != value))
				{
					this._Admin_Birthday = value;
				}
			}
		}
		
		[Column(Storage="_Role_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Role_Name
		{
			get
			{
				return this._Role_Name;
			}
			set
			{
				if ((this._Role_Name != value))
				{
					this._Role_Name = value;
				}
			}
		}
		
		[Column(Storage="_Admin_Address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Admin_Address
		{
			get
			{
				return this._Admin_Address;
			}
			set
			{
				if ((this._Admin_Address != value))
				{
					this._Admin_Address = value;
				}
			}
		}
		
		[Column(Storage="_Admin_Email", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Admin_Email
		{
			get
			{
				return this._Admin_Email;
			}
			set
			{
				if ((this._Admin_Email != value))
				{
					this._Admin_Email = value;
				}
			}
		}
		
		[Column(Storage="_Admin_Active", DbType="Bit NOT NULL")]
		public bool Admin_Active
		{
			get
			{
				return this._Admin_Active;
			}
			set
			{
				if ((this._Admin_Active != value))
				{
					this._Admin_Active = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
